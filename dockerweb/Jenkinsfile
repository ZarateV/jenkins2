pipeline {
    agent any
    parameters {
        string(name: 'name_container', defaultValue: 'proyecto-qa', description: 'nombre del docker')
        string(name: 'name_imagen', defaultValue: 'iproyecto-qa', description: 'nombre de la imagen')
        string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
        string(name: 'puerto_imagen', defaultValue: '81', description: 'puerto a publicar')
    }
    environment {
        name_final = "${params.name_container}${params.tag_imagen}${params.puerto_imagen}"
    }
    stages {
        stage('stop/rm') {
            when {
                expression {
                    def DOCKER_EXIST = sh(returnStdout: true, script: "docker ps -q --filter name=${name_final}").trim()
                    return DOCKER_EXIST != ''
                }
            }
            steps {
                script {
                    sh "docker stop ${name_final}"
                    sh "docker rm ${name_final}"
                }
            }
        }
        stage('build') {
            steps {
                script {
                    sh "docker build . -t ${params.name_imagen}:${params.tag_imagen}"
                }
            }
        }
        stage('run') {
            steps {
                script {
                    sh "docker run -dtp ${params.puerto_imagen}:80 --name ${name_final} ${params.name_imagen}:${params.tag_imagen}"
                }
            }
        }
    }
}